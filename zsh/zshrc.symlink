# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="agnoster"

plugins=(
    git
    zsh-autosuggestions
    zsh-syntax-highlighting
    zsh-z
)

if [ $ITERM_SESSION_ID ]; then
precmd() {
  echo -ne "\033]0;${PWD##*/}\007"
}
fi

source $ZSH/oh-my-zsh.sh

# all of our zsh files
typeset -U config_files
config_files=($HOME/.dotfiles/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
    source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

DEFAULT_USER=`whoami`

# Bin files
export PATH="$HOME/.dotfiles/bin:$PATH"

# Less
export PATH="/usr/local/opt/ncurses/bin:$PATH"

# Delta
export DELTA_PAGER="less -rR --mouse"

# Ruby
export PATH="/usr/local/opt/ruby@2.7/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/ruby@2.7/lib"
export CPPFLAGS="-I/usr/local/opt/ruby@2.7/include"
export PATH="/usr/local/lib/ruby/gems/2.7.0/bin:$PATH"
# source /usr/local/share/chruby/chruby.sh
# source /usr/local/share/chruby/auto.sh

# Android Studio
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/marekfort/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/marekfort/opt/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/marekfort/opt/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/marekfort/opt/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Haskell
[ -f "/Users/marekfort/.ghcup/env" ] && source "/Users/marekfort/.ghcup/env" # ghcup-env

# Latex
export PATH="/Library/TeX/texbin:$PATH"

[ -f /opt/dev/dev.sh ] && source /opt/dev/dev.sh
if [ -e /Users/marekfort/.nix-profile/etc/profile.d/nix.sh ]; then . /Users/marekfort/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

[[ -f /opt/dev/sh/chruby/chruby.sh ]] && type chruby >/dev/null 2>&1 || chruby () { source /opt/dev/sh/chruby/chruby.sh; chruby "$@"; }
